/*
 * This file is generated by jOOQ.
 */
package ru.itis.agona.model.jooq.schema;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.itis.agona.model.jooq.schema.tables.EatenFoods;
import ru.itis.agona.model.jooq.schema.tables.FavoriteDishes;
import ru.itis.agona.model.jooq.schema.tables.FoodCategories;
import ru.itis.agona.model.jooq.schema.tables.Foods;
import ru.itis.agona.model.jooq.schema.tables.Users;
import ru.itis.agona.model.jooq.schema.tables.records.EatenFoodsRecord;
import ru.itis.agona.model.jooq.schema.tables.records.FavoriteDishesRecord;
import ru.itis.agona.model.jooq.schema.tables.records.FoodCategoriesRecord;
import ru.itis.agona.model.jooq.schema.tables.records.FoodsRecord;
import ru.itis.agona.model.jooq.schema.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EatenFoodsRecord> EATEN_FOODS_PKEY = Internal.createUniqueKey(EatenFoods.EATEN_FOODS_ENTITY, DSL.name("eaten_foods_pkey"), new TableField[] { EatenFoods.EATEN_FOODS_ENTITY.ID }, true);
    public static final UniqueKey<FavoriteDishesRecord> FAVORITE_DISHES_PKEY = Internal.createUniqueKey(FavoriteDishes.FAVORITE_DISHES_ENTITY, DSL.name("favorite_dishes_pkey"), new TableField[] { FavoriteDishes.FAVORITE_DISHES_ENTITY.ID }, true);
    public static final UniqueKey<FoodCategoriesRecord> FOOD_CATEGORIES_PKEY = Internal.createUniqueKey(FoodCategories.FOOD_CATEGORIES_ENTITY, DSL.name("food_categories_pkey"), new TableField[] { FoodCategories.FOOD_CATEGORIES_ENTITY.ID }, true);
    public static final UniqueKey<FoodsRecord> FOODS_PKEY = Internal.createUniqueKey(Foods.FOODS_ENTITY, DSL.name("foods_pkey"), new TableField[] { Foods.FOODS_ENTITY.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS_ENTITY, DSL.name("users_pkey"), new TableField[] { Users.USERS_ENTITY.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EatenFoodsRecord, FoodsRecord> EATEN_FOODS__FK_FOOD_ID = Internal.createForeignKey(EatenFoods.EATEN_FOODS_ENTITY, DSL.name("fk_food_id"), new TableField[] { EatenFoods.EATEN_FOODS_ENTITY.FOOD_ID }, Keys.FOODS_PKEY, new TableField[] { Foods.FOODS_ENTITY.ID }, true);
    public static final ForeignKey<EatenFoodsRecord, UsersRecord> EATEN_FOODS__FK_USER_ID = Internal.createForeignKey(EatenFoods.EATEN_FOODS_ENTITY, DSL.name("fk_user_id"), new TableField[] { EatenFoods.EATEN_FOODS_ENTITY.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS_ENTITY.ID }, true);
    public static final ForeignKey<FavoriteDishesRecord, UsersRecord> FAVORITE_DISHES__FK_USER_ID = Internal.createForeignKey(FavoriteDishes.FAVORITE_DISHES_ENTITY, DSL.name("fk_user_id"), new TableField[] { FavoriteDishes.FAVORITE_DISHES_ENTITY.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS_ENTITY.ID }, true);
    public static final ForeignKey<FoodsRecord, FoodCategoriesRecord> FOODS__FK_CATEGORY_ID = Internal.createForeignKey(Foods.FOODS_ENTITY, DSL.name("fk_category_id"), new TableField[] { Foods.FOODS_ENTITY.CATEGORY_ID }, Keys.FOOD_CATEGORIES_PKEY, new TableField[] { FoodCategories.FOOD_CATEGORIES_ENTITY.ID }, true);
}
