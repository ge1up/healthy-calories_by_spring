/*
 * This file is generated by jOOQ.
 */
package ru.itis.agona.model.jooq.schema.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import ru.itis.agona.model.Entity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersEntity extends Entity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String name;
    private String surname;
    private Short age;
    private Short weight;
    private Short height;
    private Short typeOfFood;

    public UsersEntity() {}

    public UsersEntity(UsersEntity value) {
        this.id = value.id;
        this.name = value.name;
        this.surname = value.surname;
        this.age = value.age;
        this.weight = value.weight;
        this.height = value.height;
        this.typeOfFood = value.typeOfFood;
    }

    public UsersEntity(
        UUID id,
        String name,
        String surname,
        Short age,
        Short weight,
        Short height,
        Short typeOfFood
    ) {
        this.id = id;
        this.name = name;
        this.surname = surname;
        this.age = age;
        this.weight = weight;
        this.height = height;
        this.typeOfFood = typeOfFood;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.users.surname</code>.
     */
    public String getSurname() {
        return this.surname;
    }

    /**
     * Setter for <code>public.users.surname</code>.
     */
    public void setSurname(String surname) {
        this.surname = surname;
    }

    /**
     * Getter for <code>public.users.age</code>.
     */
    public Short getAge() {
        return this.age;
    }

    /**
     * Setter for <code>public.users.age</code>.
     */
    public void setAge(Short age) {
        this.age = age;
    }

    /**
     * Getter for <code>public.users.weight</code>.
     */
    public Short getWeight() {
        return this.weight;
    }

    /**
     * Setter for <code>public.users.weight</code>.
     */
    public void setWeight(Short weight) {
        this.weight = weight;
    }

    /**
     * Getter for <code>public.users.height</code>.
     */
    public Short getHeight() {
        return this.height;
    }

    /**
     * Setter for <code>public.users.height</code>.
     */
    public void setHeight(Short height) {
        this.height = height;
    }

    /**
     * Getter for <code>public.users.type_of_food</code>.
     */
    public Short getTypeOfFood() {
        return this.typeOfFood;
    }

    /**
     * Setter for <code>public.users.type_of_food</code>.
     */
    public void setTypeOfFood(Short typeOfFood) {
        this.typeOfFood = typeOfFood;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UsersEntity other = (UsersEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.surname == null) {
            if (other.surname != null)
                return false;
        }
        else if (!this.surname.equals(other.surname))
            return false;
        if (this.age == null) {
            if (other.age != null)
                return false;
        }
        else if (!this.age.equals(other.age))
            return false;
        if (this.weight == null) {
            if (other.weight != null)
                return false;
        }
        else if (!this.weight.equals(other.weight))
            return false;
        if (this.height == null) {
            if (other.height != null)
                return false;
        }
        else if (!this.height.equals(other.height))
            return false;
        if (this.typeOfFood == null) {
            if (other.typeOfFood != null)
                return false;
        }
        else if (!this.typeOfFood.equals(other.typeOfFood))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.surname == null) ? 0 : this.surname.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.weight == null) ? 0 : this.weight.hashCode());
        result = prime * result + ((this.height == null) ? 0 : this.height.hashCode());
        result = prime * result + ((this.typeOfFood == null) ? 0 : this.typeOfFood.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UsersEntity (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(surname);
        sb.append(", ").append(age);
        sb.append(", ").append(weight);
        sb.append(", ").append(height);
        sb.append(", ").append(typeOfFood);

        sb.append(")");
        return sb.toString();
    }
}
