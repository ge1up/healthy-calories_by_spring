/*
 * This file is generated by jOOQ.
 */
package ru.itis.agona.model.jooq.schema.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.agona.model.jooq.schema.tables.Users;
import ru.itis.agona.model.jooq.schema.tables.pojos.UsersEntity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<UUID, String, String, Short, Short, Short, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.surname</code>.
     */
    public void setSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.surname</code>.
     */
    public String getSurname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.age</code>.
     */
    public void setAge(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.age</code>.
     */
    public Short getAge() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.users.weight</code>.
     */
    public void setWeight(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.weight</code>.
     */
    public Short getWeight() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.users.height</code>.
     */
    public void setHeight(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users.height</code>.
     */
    public Short getHeight() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.users.type_of_food</code>.
     */
    public void setTypeOfFood(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users.type_of_food</code>.
     */
    public Short getTypeOfFood() {
        return (Short) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, Short, Short, Short, Short> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, Short, Short, Short, Short> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Users.USERS_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS_ENTITY.NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS_ENTITY.SURNAME;
    }

    @Override
    public Field<Short> field4() {
        return Users.USERS_ENTITY.AGE;
    }

    @Override
    public Field<Short> field5() {
        return Users.USERS_ENTITY.WEIGHT;
    }

    @Override
    public Field<Short> field6() {
        return Users.USERS_ENTITY.HEIGHT;
    }

    @Override
    public Field<Short> field7() {
        return Users.USERS_ENTITY.TYPE_OF_FOOD;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getSurname();
    }

    @Override
    public Short component4() {
        return getAge();
    }

    @Override
    public Short component5() {
        return getWeight();
    }

    @Override
    public Short component6() {
        return getHeight();
    }

    @Override
    public Short component7() {
        return getTypeOfFood();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getSurname();
    }

    @Override
    public Short value4() {
        return getAge();
    }

    @Override
    public Short value5() {
        return getWeight();
    }

    @Override
    public Short value6() {
        return getHeight();
    }

    @Override
    public Short value7() {
        return getTypeOfFood();
    }

    @Override
    public UsersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setSurname(value);
        return this;
    }

    @Override
    public UsersRecord value4(Short value) {
        setAge(value);
        return this;
    }

    @Override
    public UsersRecord value5(Short value) {
        setWeight(value);
        return this;
    }

    @Override
    public UsersRecord value6(Short value) {
        setHeight(value);
        return this;
    }

    @Override
    public UsersRecord value7(Short value) {
        setTypeOfFood(value);
        return this;
    }

    @Override
    public UsersRecord values(UUID value1, String value2, String value3, Short value4, Short value5, Short value6, Short value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS_ENTITY);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID id, String name, String surname, Short age, Short weight, Short height, Short typeOfFood) {
        super(Users.USERS_ENTITY);

        setId(id);
        setName(name);
        setSurname(surname);
        setAge(age);
        setWeight(weight);
        setHeight(height);
        setTypeOfFood(typeOfFood);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UsersEntity value) {
        super(Users.USERS_ENTITY);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setSurname(value.getSurname());
            setAge(value.getAge());
            setWeight(value.getWeight());
            setHeight(value.getHeight());
            setTypeOfFood(value.getTypeOfFood());
        }
    }
}
