/*
 * This file is generated by jOOQ.
 */
package ru.itis.agona.model.jooq.schema.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import ru.itis.agona.model.jooq.schema.tables.Foods;
import ru.itis.agona.model.jooq.schema.tables.pojos.FoodsEntity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FoodsRecord extends UpdatableRecordImpl<FoodsRecord> implements Record8<UUID, String, Short, Short, Short, Short, Short, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.foods.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.foods.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.foods.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.foods.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.foods.proteins</code>.
     */
    public void setProteins(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.foods.proteins</code>.
     */
    public Short getProteins() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.foods.fats</code>.
     */
    public void setFats(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.foods.fats</code>.
     */
    public Short getFats() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.foods.carbohydrates</code>.
     */
    public void setCarbohydrates(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.foods.carbohydrates</code>.
     */
    public Short getCarbohydrates() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.foods.calories_number</code>.
     */
    public void setCaloriesNumber(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.foods.calories_number</code>.
     */
    public Short getCaloriesNumber() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.foods.type_of_food</code>.
     */
    public void setTypeOfFood(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.foods.type_of_food</code>.
     */
    public Short getTypeOfFood() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.foods.category_id</code>.
     */
    public void setCategoryId(UUID value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.foods.category_id</code>.
     */
    public UUID getCategoryId() {
        return (UUID) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, String, Short, Short, Short, Short, Short, UUID> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, String, Short, Short, Short, Short, Short, UUID> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Foods.FOODS_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return Foods.FOODS_ENTITY.NAME;
    }

    @Override
    public Field<Short> field3() {
        return Foods.FOODS_ENTITY.PROTEINS;
    }

    @Override
    public Field<Short> field4() {
        return Foods.FOODS_ENTITY.FATS;
    }

    @Override
    public Field<Short> field5() {
        return Foods.FOODS_ENTITY.CARBOHYDRATES;
    }

    @Override
    public Field<Short> field6() {
        return Foods.FOODS_ENTITY.CALORIES_NUMBER;
    }

    @Override
    public Field<Short> field7() {
        return Foods.FOODS_ENTITY.TYPE_OF_FOOD;
    }

    @Override
    public Field<UUID> field8() {
        return Foods.FOODS_ENTITY.CATEGORY_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Short component3() {
        return getProteins();
    }

    @Override
    public Short component4() {
        return getFats();
    }

    @Override
    public Short component5() {
        return getCarbohydrates();
    }

    @Override
    public Short component6() {
        return getCaloriesNumber();
    }

    @Override
    public Short component7() {
        return getTypeOfFood();
    }

    @Override
    public UUID component8() {
        return getCategoryId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Short value3() {
        return getProteins();
    }

    @Override
    public Short value4() {
        return getFats();
    }

    @Override
    public Short value5() {
        return getCarbohydrates();
    }

    @Override
    public Short value6() {
        return getCaloriesNumber();
    }

    @Override
    public Short value7() {
        return getTypeOfFood();
    }

    @Override
    public UUID value8() {
        return getCategoryId();
    }

    @Override
    public FoodsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public FoodsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FoodsRecord value3(Short value) {
        setProteins(value);
        return this;
    }

    @Override
    public FoodsRecord value4(Short value) {
        setFats(value);
        return this;
    }

    @Override
    public FoodsRecord value5(Short value) {
        setCarbohydrates(value);
        return this;
    }

    @Override
    public FoodsRecord value6(Short value) {
        setCaloriesNumber(value);
        return this;
    }

    @Override
    public FoodsRecord value7(Short value) {
        setTypeOfFood(value);
        return this;
    }

    @Override
    public FoodsRecord value8(UUID value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public FoodsRecord values(UUID value1, String value2, Short value3, Short value4, Short value5, Short value6, Short value7, UUID value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FoodsRecord
     */
    public FoodsRecord() {
        super(Foods.FOODS_ENTITY);
    }

    /**
     * Create a detached, initialised FoodsRecord
     */
    public FoodsRecord(UUID id, String name, Short proteins, Short fats, Short carbohydrates, Short caloriesNumber, Short typeOfFood, UUID categoryId) {
        super(Foods.FOODS_ENTITY);

        setId(id);
        setName(name);
        setProteins(proteins);
        setFats(fats);
        setCarbohydrates(carbohydrates);
        setCaloriesNumber(caloriesNumber);
        setTypeOfFood(typeOfFood);
        setCategoryId(categoryId);
    }

    /**
     * Create a detached, initialised FoodsRecord
     */
    public FoodsRecord(FoodsEntity value) {
        super(Foods.FOODS_ENTITY);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setProteins(value.getProteins());
            setFats(value.getFats());
            setCarbohydrates(value.getCarbohydrates());
            setCaloriesNumber(value.getCaloriesNumber());
            setTypeOfFood(value.getTypeOfFood());
            setCategoryId(value.getCategoryId());
        }
    }
}
